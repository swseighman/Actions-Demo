name: Login to Oracle Container Registry

on:
  push:
  # Remove none and add [ main ] to automatically trigger the action on push
    branches: none
  pull_request:
    branches: none
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  get-ocir-repository-test:
    runs-on: ubuntu-latest
    name: Get OCIR Repository Test
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - name: Get or create an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.1
        id: get-ocir-repository
        with:
          name: oraclelinux
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.1
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}
      
      - name: Tag and push a container image
        id: tag-and-push-image
        run: |
          docker build -t actions-demo:native .
          docker tag "actions-demo:native" "${{ steps.get-ocir-repository.outputs.repo_path }}:native"
          docker push "${{ steps.get-ocir-repository.outputs.repo_path }}:native"
