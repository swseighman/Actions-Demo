name: GraalVM Native Image Builds

on:
  push:
    branches: none  #[ main ]
  pull_request:
    branches: none
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Simple Spring Boot Sample on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.0'
          gds-token: ${{ secrets.GDS_TOKEN }}
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build Native Image Using Maven
        run: mvn -Pnative native:compile

      # - name: Upload binary
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: actions-demo-${{ matrix.os }}
      #     path: target/actions-demo

      - name: Download artifacts
        uses: actions/download-artifact@v3
        # with:
        #   path: releases
      
      - name: Debug downloads
        run: pwd; ls -lh
        # working-directory: target

      - name: Copy downloaded artifact to . for Dockerfile compatibility
        run: cp ./target/actions-demo .

      # Define job to build and publish container image
   
      - name: Build and Publish a Container
        uses: actions/checkout@v3

      # Setup Container build action
      - name: Set up Container Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          # Relative path to the place where source code with Dockerfile is located
          context: ./
          # Note: tags has to be all lower-case
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
